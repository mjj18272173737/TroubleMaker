<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kandashan.admin.dao.refundMapper">
  <resultMap id="BaseResultMap" type="com.kandashan.admin.entity.refund">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="payee" jdbcType="VARCHAR" property="payee" />
    <result column="payment_config_name" jdbcType="VARCHAR" property="paymentConfigName" />
    <result column="refund_sn" jdbcType="VARCHAR" property="refundSn" />
    <result column="refund_type" jdbcType="INTEGER" property="refundType" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="payment_config_id" jdbcType="VARCHAR" property="paymentConfigId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="deposit_id" jdbcType="VARCHAR" property="depositId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kandashan.admin.entity.refund">
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, bank_account, bank_name, operator, payee, payment_config_name, 
    refund_sn, refund_type, total_amount, payment_config_id, order_id, deposit_id
  </sql>
  <sql id="Blob_Column_List">
    memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kandashan.admin.entity.refundExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kandashan.admin.entity.refundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xx_refund
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xx_refund
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kandashan.admin.entity.refundExample">
    delete from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kandashan.admin.entity.refund">
    insert into xx_refund (id, create_date, modify_date, 
      bank_account, bank_name, operator, 
      payee, payment_config_name, refund_sn, 
      refund_type, total_amount, payment_config_id, 
      order_id, deposit_id, memo
      )
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{payee,jdbcType=VARCHAR}, #{paymentConfigName,jdbcType=VARCHAR}, #{refundSn,jdbcType=VARCHAR}, 
      #{refundType,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, #{paymentConfigId,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{depositId,jdbcType=VARCHAR}, #{memo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kandashan.admin.entity.refund">
    insert into xx_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="payee != null">
        payee,
      </if>
      <if test="paymentConfigName != null">
        payment_config_name,
      </if>
      <if test="refundSn != null">
        refund_sn,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="paymentConfigId != null">
        payment_config_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="depositId != null">
        deposit_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        #{payee,jdbcType=VARCHAR},
      </if>
      <if test="paymentConfigName != null">
        #{paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentConfigId != null">
        #{paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        #{depositId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kandashan.admin.entity.refundExample" resultType="java.lang.Integer">
    select count(*) from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xx_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.payee != null">
        payee = #{record.payee,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentConfigName != null">
        payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="record.refundSn != null">
        refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentConfigId != null">
        payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.depositId != null">
        deposit_id = #{record.depositId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update xx_refund
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      payee = #{record.payee,jdbcType=VARCHAR},
      payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      deposit_id = #{record.depositId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xx_refund
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      payee = #{record.payee,jdbcType=VARCHAR},
      payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      deposit_id = #{record.depositId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        payee = #{payee,jdbcType=VARCHAR},
      </if>
      <if test="paymentConfigName != null">
        payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        refund_sn = #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentConfigId != null">
        payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        deposit_id = #{depositId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      payee = #{payee,jdbcType=VARCHAR},
      payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      deposit_id = #{depositId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      payee = #{payee,jdbcType=VARCHAR},
      payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      deposit_id = #{depositId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.kandashan.admin.entity.refund">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="payee" jdbcType="VARCHAR" property="payee" />
    <result column="payment_config_name" jdbcType="VARCHAR" property="paymentConfigName" />
    <result column="refund_sn" jdbcType="VARCHAR" property="refundSn" />
    <result column="refund_type" jdbcType="INTEGER" property="refundType" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="payment_config_id" jdbcType="VARCHAR" property="paymentConfigId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="deposit_id" jdbcType="VARCHAR" property="depositId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kandashan.admin.entity.refund">
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, bank_account, bank_name, operator, payee, payment_config_name, 
    refund_sn, refund_type, total_amount, payment_config_id, order_id, deposit_id
  </sql>
  <sql id="Blob_Column_List">
    memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kandashan.admin.entity.refundExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kandashan.admin.entity.refundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xx_refund
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xx_refund
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kandashan.admin.entity.refundExample">
    delete from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kandashan.admin.entity.refund">
    insert into xx_refund (id, create_date, modify_date, 
      bank_account, bank_name, operator, 
      payee, payment_config_name, refund_sn, 
      refund_type, total_amount, payment_config_id, 
      order_id, deposit_id, memo
      )
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{payee,jdbcType=VARCHAR}, #{paymentConfigName,jdbcType=VARCHAR}, #{refundSn,jdbcType=VARCHAR}, 
      #{refundType,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, #{paymentConfigId,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{depositId,jdbcType=VARCHAR}, #{memo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kandashan.admin.entity.refund">
    insert into xx_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="payee != null">
        payee,
      </if>
      <if test="paymentConfigName != null">
        payment_config_name,
      </if>
      <if test="refundSn != null">
        refund_sn,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="paymentConfigId != null">
        payment_config_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="depositId != null">
        deposit_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        #{payee,jdbcType=VARCHAR},
      </if>
      <if test="paymentConfigName != null">
        #{paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentConfigId != null">
        #{paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        #{depositId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kandashan.admin.entity.refundExample" resultType="java.lang.Integer">
    select count(*) from xx_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xx_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.payee != null">
        payee = #{record.payee,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentConfigName != null">
        payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="record.refundSn != null">
        refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentConfigId != null">
        payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.depositId != null">
        deposit_id = #{record.depositId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update xx_refund
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      payee = #{record.payee,jdbcType=VARCHAR},
      payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      deposit_id = #{record.depositId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xx_refund
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      payee = #{record.payee,jdbcType=VARCHAR},
      payment_config_name = #{record.paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{record.paymentConfigId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      deposit_id = #{record.depositId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        payee = #{payee,jdbcType=VARCHAR},
      </if>
      <if test="paymentConfigName != null">
        payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        refund_sn = #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentConfigId != null">
        payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        deposit_id = #{depositId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      payee = #{payee,jdbcType=VARCHAR},
      payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      deposit_id = #{depositId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kandashan.admin.entity.refund">
    update xx_refund
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      payee = #{payee,jdbcType=VARCHAR},
      payment_config_name = #{paymentConfigName,jdbcType=VARCHAR},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      payment_config_id = #{paymentConfigId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      deposit_id = #{depositId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>